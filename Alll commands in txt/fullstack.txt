ctrl+shift+n new folder
ctrl+z new file text

1.new file create filte .gitignote
2.inside .gitignote -> node_modules/
3.git init -> for reository
4.npm init
5.npm i express express-validator bcryptjs config gravatar jsonwebtoken mongoose request

regular dependencies
express-> our main web framework for the backend
express-validator-> data vaildation
bcryptjs-> for password encryption
config-> for global variables 
gravatar-> for profile avatars
jsonwebtoken -> because we using jwt to pass along a token for validation
mongoose-> a layer that sits on top of database so we can interact with it
request-> allow us to make http requests to another api. for github repositories
ies
dev dependen
6.npm i -D nodemon concurrently
nodemon-> constantly watch out server that we dont have to refresh it every time we make a change.
concurrrently-> allow us to run our backend express server and fronend react dev server at the same time with one single command
npm i express-fileupload

client-react
npx create-react-app client
npm i axios react-router-dom redux react-redux redux-thunk redux-devtools-extension moment react-moment uuid

racf / rafce+tab + tab --> function compoenent

package.json in the server
  "scripts": {
    "start": "node server",
    "server": "nodemon server",
    "client": "npm start --prefix client",
    "dev": "concurrently \"npm run server\" \"npm run client\""
  },
npm run dev --> will open client and server
npm start --> will open server
npm run client--> will open client

------------------------------------------------------
server package.json
{
  "name": "fullstack-react",
  "version": "1.0.0",
  "description": "social network for developers",
  "main": "server.js",
  "dependencies": {
    "bcryptjs": "^2.4.3",
    "config": "^3.3.0",
    "express": "^4.17.1",
    "express-validator": "^6.4.0",
    "gravatar": "^1.8.0",
    "jsonwebtoken": "^8.5.1",
    "mongoose": "^5.9.6",
    "request": "^2.88.2"
  },
  "devDependencies": {
    "concurrently": "^5.1.0",
    "nodemon": "^2.0.2"
  },
  "scripts": {
    "start": "node server",
    "server": "nodemon server",
    "client": "npm start --prefix client",
    "dev": "concurrently \"npm run server\" \"npm run client\""
  },
  "author": "dori basson",
  "license": "MIT"
}


client package.json
{
  "name": "client",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^4.2.4",
    "@testing-library/react": "^9.5.0",
    "@testing-library/user-event": "^7.2.1",
    "axios": "^0.19.2",
    "moment": "^2.24.0",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "react-moment": "^0.9.7",
    "react-redux": "^7.2.0",
    "react-router-dom": "^5.1.2",
    "react-scripts": "3.4.1",
    "redux": "^4.0.5",
    "redux-devtools-extension": "^2.13.8",
    "redux-thunk": "^2.3.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "proxy":"http://localhost:5000"
}






singleQuote in settings  vs code